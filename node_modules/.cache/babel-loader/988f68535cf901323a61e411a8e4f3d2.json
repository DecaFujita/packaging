{"ast":null,"code":"var _jsxFileName = \"/Users/decafujita/Desktop/GIT/webpack/packaging/src/contexts/Portfolio.context.js\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortfolioContext = /*#__PURE__*/createContext();\n\nconst PortfolioProvider = props => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [width, setWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    const handleResizeWindow = () => setWidth(window.innerWidth); // subscribe to window resize event \"onComponentDidMount\"\n\n\n    window.addEventListener(\"resize\", handleResizeWindow);\n    return () => {\n      // unsubscribe \"onComponentDestroy\"\n      window.removeEventListener(\"resize\", handleResizeWindow);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PortfolioContext.Provider, {\n    value: {\n      isOpen,\n      setIsOpen,\n      width\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PortfolioProvider, \"lOhdye0KsvJqX2A7cah9b2j0pmk=\");\n\n_c = PortfolioProvider;\nexport { PortfolioContext, PortfolioProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioProvider\");","map":{"version":3,"sources":["/Users/decafujita/Desktop/GIT/webpack/packaging/src/contexts/Portfolio.context.js"],"names":["useState","createContext","useEffect","PortfolioContext","PortfolioProvider","props","isOpen","setIsOpen","width","setWidth","window","innerWidth","handleResizeWindow","addEventListener","removeEventListener","children"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,SAAlC,QAAmD,OAAnD;;AAEA,MAAMC,gBAAgB,gBAAGF,aAAa,EAAtC;;AAEA,MAAMG,iBAAiB,GAAGC,KAAK,IAAI;AAAA;;AAC/B,QAAM,CAAEC,MAAF,EAAUC,SAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACU,MAAM,CAACC,UAAR,CAAlC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,kBAAkB,GAAG,MAAMH,QAAQ,CAACC,MAAM,CAACC,UAAR,CAAzC,CADY,CAEZ;;;AACAD,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCD,kBAAlC;AACA,WAAO,MAAM;AACb;AACAF,MAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCF,kBAArC;AACC,KAHD;AAIH,GARQ,EAQN,EARM,CAAT;AAUA,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAACN,MAAAA,MAAD;AAASC,MAAAA,SAAT;AAAoBC,MAAAA;AAApB,KAAlC;AAAA,cACKH,KAAK,CAACU;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAnBD;;GAAMX,iB;;KAAAA,iB;AAqBN,SAASD,gBAAT,EAA2BC,iBAA3B","sourcesContent":["import { useState, createContext, useEffect } from 'react';\n\nconst PortfolioContext = createContext();\n\nconst PortfolioProvider = props => {\n    const [ isOpen, setIsOpen ] = useState(false);\n    const [width, setWidth] = useState(window.innerWidth);\n\n    useEffect(() => {\n        const handleResizeWindow = () => setWidth(window.innerWidth);\n        // subscribe to window resize event \"onComponentDidMount\"\n        window.addEventListener(\"resize\", handleResizeWindow);\n        return () => {\n        // unsubscribe \"onComponentDestroy\"\n        window.removeEventListener(\"resize\", handleResizeWindow);\n        };\n    }, []);\n\n    return (\n        <PortfolioContext.Provider value={{isOpen, setIsOpen, width}}>\n            {props.children}\n        </PortfolioContext.Provider>\n    )\n}\n\nexport { PortfolioContext, PortfolioProvider }"]},"metadata":{},"sourceType":"module"}